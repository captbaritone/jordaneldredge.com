diff --git a/build/notion-to-md.js b/build/notion-to-md.js
index 3e74a113fbe556bf7709e4c034b23d379b297f2d..a5682eaeb5ba402585c2755fabb1dd15fe681815 100644
--- a/build/notion-to-md.js
+++ b/build/notion-to-md.js
@@ -62,7 +62,9 @@ class NotionToMarkdown {
                 mdBlocks.type !== "child_page") {
                 if (mdBlocks.type !== "to_do" &&
                     mdBlocks.type !== "bulleted_list_item" &&
-                    mdBlocks.type !== "numbered_list_item") {
+                    mdBlocks.type !== "numbered_list_item"
+                    && mdBlocks.type !== "quote"
+                ) {
                     // initialize if key doesn't exist
                     mdOutput[pageIdentifier] = mdOutput[pageIdentifier] || "";
                     // add extra line breaks non list blocks
@@ -110,7 +112,17 @@ class NotionToMarkdown {
                     mdOutput[pageIdentifier] = mdOutput[pageIdentifier] || "";
                     mdOutput[pageIdentifier] += md.toggle(mdBlocks.parent, toggle_children_md_string["parent"]);
                 }
-                else {
+                else if (mdBlocks.type === "quote") {
+                    let mdstr = this.toMarkdownString(mdBlocks.children, pageIdentifier, nestingLevel);
+                    mdstr.parent = mdstr.parent.replace(/\n/g, "\n> ").replace(/^\n/, "");
+                    mdOutput[pageIdentifier] = mdOutput[pageIdentifier] || "";
+                    if (pageIdentifier !== "parent" && mdstr["parent"]) {
+                        mdOutput[pageIdentifier] += mdstr["parent"];
+                    }
+                    else if (mdstr[pageIdentifier]) {
+                        mdOutput[pageIdentifier] += mdstr[pageIdentifier];
+                    }
+                } else {
                     let mdstr = this.toMarkdownString(mdBlocks.children, pageIdentifier, nestingLevel + 1);
                     mdOutput[pageIdentifier] = mdOutput[pageIdentifier] || "";
                     if (pageIdentifier !== "parent" && mdstr["parent"]) {
