name: Build Next.js Blog

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SEARCH_INDEX_LOCATION: ./content.db
      SESSION_SECRET: "supersecret-verylongstring-at-least-32-characters"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.3

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Grats Build/Check
        run: ./scripts/grats_check.sh

      - name: Migrations
        run: |
          npx tsx migrations/001-006-catch-up.ts

      - name: Tests
        run: pnpm run test

      - name: Build Next.js site
        run: pnpm build

      - name: Run Next.js site
        uses: actions/cache@v4
        with:
          # See here for caching with `yarn`, `bun` or other package managers https://github.com/actions/cache/blob/main/examples.md or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Cache Next.js build artifacts
        uses: actions/cache@v3
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-
